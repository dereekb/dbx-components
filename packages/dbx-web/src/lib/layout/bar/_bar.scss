@use 'sass:map';
@use 'sass:color';
@use '../../style/theming';

// MARK: Variables
$pagebar-height-var: theming.$page-navbar-height-var;
$pagebar-height: theming.$page-navbar-height;
$bar-vertical-padding: theming.$padding-1;
$bar-fixed-height: 40px;

// MARK: Mixin
@mixin core() {
  .dbx-banner {
    @include theming.elevation(3);
  }

  .dbx-pagebar.mat-toolbar {
    height: $pagebar-height;
  }

  .dbx-bar {
    box-sizing: border-box;
    padding: $bar-vertical-padding;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .dbx-bar-fixed-height {
    height: $bar-fixed-height;
    overflow: hidden;
  }

  .dbx-pagebar-hide {
    #{$pagebar-height-var}: 0px;

    .dbx-pagebar {
      display: none;
    }
  }
}

@mixin color($theme-config) {
  $color-config: theming.m2-get-color-config($theme-config);
  $background: map.get($color-config, 'background');
  $primary: map.get($color-config, 'primary');
  $accent: map.get($color-config, 'accent');

  $dbx-bar-bg-color: theming.m2-get-color-from-palette($background, 'app-bar');
  $dbx-bar-color: theming.m2-get-color-from-palette($background, 'contrast');

  .dbx-pagebar .mat-toolbar {
    // todo?
  }

  .dbx-bar,
  .dbx-bar-background {
    background: $dbx-bar-bg-color;
    color: $dbx-bar-color;
  }
}

@mixin typography($theme-config-or-typography-config) {
  $typography-config: theming.m2-get-typography-config($theme-config-or-typography-config);

  .dbx-bar {
    font-size: theming.m2-font-size($typography-config, 'caption');
  }
}

@mixin theme($theme-config) {
  @include theming.private-check-duplicate-theme-styles($theme-config, 'dbx-layout-bar') {
    $color: theming.m2-get-color-config($theme-config);
    $density: theming.m2-get-density-config($theme-config);
    $typography: theming.m2-get-typography-config($theme-config);

    @if $color !=null {
      @include color($theme-config);
    }

    @if $typography !=null {
      @include typography($theme-config);
    }
  }
}
